"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[614],{6652:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var s=t(6106),o=t(9252);const r={title:"Usage Guide"},a=void 0,i={id:"usage-guide",title:"Usage Guide",description:"This guide is designed to help you get started with Fetchtastic, walking you",source:"@site/docs/usage-guide.mdx",sourceDirName:".",slug:"/usage-guide",permalink:"/fetchtastic/docs/usage-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage-guide.mdx",tags:[],version:"current",frontMatter:{title:"Usage Guide"},sidebar:"docSidebar",previous:{title:"Core Concepts",permalink:"/fetchtastic/docs/core-concepts"},next:{title:"Error Handling",permalink:"/fetchtastic/docs/error-handling"}},l={},c=[{value:"Basic example",id:"basic-example",level:2},{value:"Composable configuration",id:"composable-configuration",level:2},{value:"1. Global config",id:"1-global-config",level:3},{value:"2. Endpoint level config",id:"2-endpoint-level-config",level:3},{value:"3. Send Requests",id:"3-send-requests",level:3},{value:"Aborting a request",id:"aborting-a-request",level:2},{value:"Type-safety",id:"type-safety",level:2},{value:"Generic types",id:"generic-types",level:3},{value:"Runtime schema validation",id:"runtime-schema-validation",level:3},{value:"Type guards",id:"type-guards",level:4},{value:"Zod",id:"zod",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This guide is designed to help you get started with Fetchtastic, walking you\nthrough the process of setting up and using the library for predictable and\ntype-safe network requests. You'll find step-by-step instructions, practical\nexamples, and best practices"}),"\n",(0,s.jsx)(n.h2,{id:"basic-example",children:"Basic example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const api = fetchtastic('https://jsonplaceholder.typicode.com')\n  .setOptions({ cache: 'default', mode: 'cors' })\n  .headers({\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  });\n\n// Send GET request with URL query params, resolve as JSON object\nconst json = await api\n  .get('/albums')\n  .setSearchParams({ page: 1, per_page: 12 })\n  .json();\n\n// Send POST request with JSON body, resolve as raw `Response`\nconst response = await api\n  .url('/posts/1/comments')\n  .post({ title: 'foo', content: 'bar' })\n  .resolve();\n\n// Send PUT request with JSON body, resolve as plain text\nconst text = await api\n  .url('/albums/20')\n  .put({ title: 'foo', body: 'bar', userId: 3 })\n  .text();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"composable-configuration",children:"Composable configuration"}),"\n",(0,s.jsx)(n.p,{children:"You can safely reuse previous instances."}),"\n",(0,s.jsx)(n.p,{children:"All methods return a new instance and does not modify the previous one."}),"\n",(0,s.jsx)(n.h3,{id:"1-global-config",children:"1. Global config"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const api = fetchtastic('/api/v2')\n  .setHeaders({\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  })\n  .unauthorized(async error => {\n    console.log(error.message, await error.response.json());\n    redirec('/login');\n  });\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-endpoint-level-config",children:"2. Endpoint level config"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const postsApi = api\n  .url('/posts')\n  .setSearchParams({ sortBy: 'date', order: 'desc' });\n\nconst albumsApi = api\n  .url('/albums')\n  .setOptions({ cache: 'default', mode: 'cors' });\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-send-requests",children:"3. Send Requests"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// URL: /api/v2/posts?sortBy=date&order=desc\nconst posts = await postsApi.get().json();\n\n// URL: /api/v2/albums/10\nconst album = await albumsApi.get('/10').json();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"aborting-a-request",children:"Aborting a request"}),"\n",(0,s.jsxs)(n.p,{children:["Fetch has the ability to abort requests using AbortController and signals under\nthe hood. Compatible with browsers that support\n",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/AbortController",children:"AbortController"}),".\nOtherwise, you could use a\n",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/abortcontroller-polyfill",children:"polyfill"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const controller = new AbortController();\nconst api = fetchtastic('https://jsonplaceholder.typicode.com');\n\napi\n  .get('/posts/1/comments')\n  .controller(controller)\n  .json()\n  .then(data => storeData(data)) // should never be called\n  .catch((e: Error) => {\n    console.log(e.name); // AbortError\n    console.log(e.message); // The user aborted a request.\n  });\n// Abort it!\ncontroller.abort();\n"})}),"\n",(0,s.jsx)(n.p,{children:"With this pattern you can also associate the same controller with multiple\nrequests:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const controller = new AbortController();\n\napi.controller(controller).get('/posts').json();\napi.controller(controller).get('/comments').json();\n// Abort both requests\ncontroller.abort();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"type-safety",children:"Type-safety"}),"\n",(0,s.jsxs)(n.p,{children:["By default, the ",(0,s.jsx)(n.code,{children:"json()"})," method returns an ",(0,s.jsx)(n.code,{children:"unknown"})," type, however there are two\nways to infer type-safety for the resulting data types."]}),"\n",(0,s.jsx)(n.h3,{id:"generic-types",children:"Generic types"}),"\n",(0,s.jsxs)(n.p,{children:["By providing a\n",(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/2/generics.html",children:"generic"})," type\nargument to ",(0,s.jsx)(n.code,{children:".json()"})," the resulting type will inferred:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type Post = {\n  id: number;\n  title: string;\n  body: string;\n};\n\nconst post = await fetchtastic('https://jsonplaceholder.typicode.com')\n  .get('/posts/3')\n  .json<Post>();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"runtime-schema-validation",children:"Runtime schema validation"}),"\n",(0,s.jsxs)(n.p,{children:["You can provide a function to the ",(0,s.jsx)(n.code,{children:"json()"})," resolver that performs runtime\nvalidations in order to assert the returned type. Next are two examples to\nachieve that:"]}),"\n",(0,s.jsx)(n.h4,{id:"type-guards",children:(0,s.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates",children:"Type guards"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type Album = {\n  id: number;\n  title: string;\n};\n\nfunction isAlbum(data: unknown): data is Album {\n  return (\n    data != null &&\n    typeof data === 'object' &&\n    'id' in data &&\n    typeof data.id === 'number' &&\n    'title' in data &&\n    typeof data.title === 'string'\n  );\n}\n\nexport function assertIsAlbum(data: unknown) {\n  if (isAlbum(data)) return data;\n  else throw new Error('Invalid data');\n}\n\nconst album = await fetchtastic('https://jsonplaceholder.typicode.com')\n  .get('/albums/3')\n  .json(assertIsAlbum);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"zod",children:(0,s.jsx)(n.a,{href:"https://zod.dev/",children:"Zod"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { z } from 'zod';\n\nconst PostSchema = z.object({\n  id: z.number(),\n  title: z.string(),\n  body: z.string(),\n});\n\nconst post = await fetchtastic('https://jsonplaceholder.typicode.com')\n  .get('/posts/5')\n  .json(PostSchema.parse);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9252:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(7378);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);