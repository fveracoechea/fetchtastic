"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[279],{4815:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var n=s(6106),a=s(9252);const r={},i="DataAssertionFn()<T>",c={id:"api/type-aliases/DataAssertionFn",title:"DataAssertionFn()\\<T\\>",description:"Represents a function used to assert the type of data.",source:"@site/docs/api/type-aliases/DataAssertionFn.md",sourceDirName:"api/type-aliases",slug:"/api/type-aliases/DataAssertionFn",permalink:"/fetchtastic/docs/api/type-aliases/DataAssertionFn",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/type-aliases/DataAssertionFn.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"CatcherCallback",permalink:"/fetchtastic/docs/api/type-aliases/CatcherCallback"},next:{title:"FetchRequestHeader",permalink:"/fetchtastic/docs/api/type-aliases/FetchRequestHeader"}},d={},o=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"dataassertionfnt",children:"DataAssertionFn()<T>"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"type DataAssertionFn<T>: (data) => T;\n"})}),"\n",(0,n.jsx)(t.p,{children:"Represents a function used to assert the type of data.\nThis function takes an unknown data and returns a specified type."}),"\n",(0,n.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Type Parameter"}),(0,n.jsx)(t.th,{children:"Default type"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"T"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"unknown"})})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"data"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"unknown"})})]})})]}),"\n",(0,n.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"T"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},9252:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var n=s(7378);const a={},r=n.createContext(a);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);